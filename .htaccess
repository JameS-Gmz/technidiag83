# Activer la réécriture d'URL
RewriteEngine On

# Réécrire les URLs pour diriger vers index.html pour les applications Angular
# Cette règle est nécessaire pour gérer les routes Angular côté client
RewriteRule ^(.*)$ /index.html [L,QSA]

# Gérer les erreurs 404 et autres erreurs personnalisées
ErrorDocument 404 /index.html

# Forcer l'utilisation du HTTPS (si ton site est en HTTPS)
# Assure-toi que ton serveur supporte le SSL avant d'activer cette règle
RewriteCond %{HTTPS} off
RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Définir les en-têtes pour les caches
<IfModule mod_headers.c>
    # Cache les fichiers statiques (JS, CSS, images, etc.) pour 1 an
    <FilesMatch "\.(jpg|jpeg|png|gif|css|js|woff|woff2|ttf|eot|svg|ico|json)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>
</IfModule>

# Eviter que les fichiers sensibles soient téléchargés
<FilesMatch "^.*\.(htaccess|htpasswd|ini|log|conf|env)$">
    Order Deny,Allow
    Deny from all
</FilesMatch>

# Gérer les redirections 301 en cas de changement de nom de domaine ou d'URL
# Exemple pour rediriger de www vers non-www
RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
RewriteRule ^ http://%1%{REQUEST_URI} [L,R=301]

# Empêcher l'accès aux fichiers cachés (commençant par un point)
<FilesMatch "^\..*">
    Order Deny,Allow
    Deny from all
</FilesMatch>
